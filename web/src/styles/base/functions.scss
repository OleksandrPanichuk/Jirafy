


@function strip-unit($num) {
  @return $num / ($num * 0 + 1);
}

// CONVERT TO REM
@function convert-to-rem($value, $base-value: $rem-base) {
  $value: calc(strip-unit($value) / strip-unit($base-value) * 1rem);
  @if ($value == 0rem) { $value: 0; } // Turn 0rem into 0
  @return $value;
}

// REM CALC


@function rem($values, $base-value: $rem-base) {
  $max: length($values);

  @if $max == 1 { @return convert-to-rem(nth($values, 1), $base-value); }

  $remValues: ();
  @for $i from 1 through $max {
    $remValues: append($remValues, convert-to-rem(nth($values, $i), $base-value));
  }
  @return $remValues;
}


@function em($pixels, $context: $rem-base) {
  @if (unitless($pixels)) {
    $pixels: $pixels * 1px;
  }

  @if (unitless($context)) {
    $context: $context * 1px;
  }

  @return $pixels / $context * 1em;
}
  
// Gets grid column width
@function span($cols: 4) {
    @if type-of($cols) != "number" {
      @warn "cols: #{$cols} is not a number";
      @return null;
    }
    @if type-of($grid-columns) != "number" {
      @warn "grid-columns: #{$grid-columns} is not a number";
      $valid: false;
    }
    @return percentage($cols/$grid-columns);
 }


 // Mix white with another color
// ----------------------------
@function tint($color, $percent: $mix-percent-default){
	@return mix(white, $color, $percent);
}

// Mix black with another color
// ----------------------------
@function shade($color, $percent: $mix-percent-default){
	@return mix(black, $color, $percent);
}

// Create a random color
// ---------------------
@function random-color($min: 0, $max: 255, $alpha: 1) {
	@if $min < 0 {
		$min: -1;
	} @else {
		$min: $min - 1;
	}
	@if $max > 255 {
		$max: 256;
	} @else {
		$max: $max + 1;
	}
	$red: random($max) + $min;
	$green: random($max) + $min;
	$blue: random($max) + $min;
	@return rgba($red, $green, $blue, $alpha);
}

@function reverse($string) {
	$reversed-string: '';
	@for $i from 1 through str-length($string) {
		$char: str-slice($string, $i, $i);
		$reversed-string: "#{$char}#{$reversed-string}";
	}
	@return #{$reversed-string};
}


